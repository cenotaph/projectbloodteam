-content_for :head do
  = include_puny_mce
  = javascript_include_tag "autocomplete-rails.js"  
= semantic_form_for([:agent, @item], :html => {:multipart => true} ) do |form|
  - @view.columns_for_category(@item.class, true).each do |col|
    - if col == 'date'
      = form.input col, :as => :string, :input_html => { :class => 'date_input'}
      
    - elsif (col == 'name' || ((col == 'location' || col == 'venue') && @item.respond_to?('venue_address'))) && @item.respond_to?('geolocation')
      = form.input :geolocation_id, :as => :hidden
      - json = ActiveSupport::JSON.encode( :geolocation_id => "##{@item.class.to_s.downcase}_location" )
      = form.input col, 'data-update-elements' => json, :as => :autocomplete, :url =>  ajax_geolocations_path(:category => @item.class)
      .geocode{:style => "display: none; margin-left: 75px; font-size: 7pt;"}
        Geodata: 
        Latitude:
        = text_field_tag :latitude, @item.geolocation.nil? ? '' : @item.geolocation.latitude, :disabled => true
        Longitude:
        = text_field_tag :longitude, @item.geolocation.nil? ? '' : @item.geolocation.longitude, :disabled => true
        - unless @item.geolocation.nil?
          = link_to '[edit master location details]', edit_geolocation_path(@item.geolocation)        
      - if @item.class == Concert
        :javascript
          $("##{@item.class.to_s.downcase}_venue").bind('railsAutocomplete.select', function(event, data){
            /* Do something here */
            $('#latitude').val(data.item.lat);
            $('#longitude').val(data.item.lng);
            $('.geocode').fadeIn();
            $("##{@item.class.to_s.downcase}_geolocation_id").val(data.item.geolocation_id);
            $("##{@item.class.to_s.downcase}_venue_address").val(data.item.address);
            $("##{@item.class.to_s.downcase}_venue").val(data.item.name);
          });
      
      - elsif @item.class == Event || @item.class == Movie || @item.class == Activity
        :javascript
          $("##{@item.class.to_s.downcase}_location").bind('railsAutocomplete.select', function(event, data){
            /* Do something here */
            $('#latitude').val(data.item.lat);
            $('#longitude').val(data.item.lng);
            $('.geocode').fadeIn();
            $("##{@item.class.to_s.downcase}_geolocation_id").val(data.item.geolocation_id);
            $("##{@item.class.to_s.downcase}_venue_address").val(data.item.address);
            $("##{@item.class.to_s.downcase}_location").val(data.item.name);            
          });
      
      - else
        :javascript
          $("##{@item.class.to_s.downcase}_name").bind('railsAutocomplete.select', function(event, data){
            /* Do something here */
            $('#latitude').val(data.item.lat);
            $('#longitude').val(data.item.lng);
            $('.geocode').fadeIn();
            $("##{@item.class.to_s.downcase}_geolocation_id").val(data.item.geolocation_id);
            $("##{@item.class.to_s.downcase}_location").val(data.item.address);
            $("##{@item.class.to_s.downcase}_name").val(data.item.name);            
          });
    - elsif col == 'cost'
      = form.input :currency_id, :as => :select, :collection => Currency.find(:all).collect{|x| [raw( x.symbol),  x.id]}, :label => 'Cost', :input_html => { :class => "currency_select"}
      = form.input col, :label => @view.agent_column_name(@item, col).humanize, :as => :string, :label => false, :input_html => {:class => "cost_input"}
    - else 
      = form.input col, :label => @view.agent_column_name(@item, col).humanize, :as => ( :string unless col == 'comment')
  = form.input :agent_id, :value => current_agent.id, :as => :hidden
  


  #userimages
    = form.semantic_fields_for :userimages do |ff|
      = render :partial => 'shared/userimage_fields', :locals => { :ff => ff }      
  .add_link= link_to_add_fields "+ Add another image", form, :userimages

  = form.input :add_to_newsfeed, :as => :boolean, :label => 'Post this entry to the public newsfeed', :checked => true
  - if !current_agent.twitname.blank? && !current_agent.twitpasswd.blank?
    = form.input :post_to_twitter, :as => :boolean, :label => 'Post this entry to your twitter account', :checked => true
  = form.submit 
  
= puny_mce "puny_mce", "#{@category.downcase}_comment"  
  
:javascript
  $(function() {
    $(".date_input").date_input();
    

    
  });
  $.extend(DateInput.DEFAULT_OPTS, {
  stringToDate: function(string) {
  var matches;
  if (matches = string.match(/^(\d{4,4})-(\d{2,2})-(\d{2,2})$/)) {
  return new Date(matches[1], matches[2] - 1, matches[3]);
  } else {
  return null;
  };
  },
  dateToString: function(date) {
  var month = (date.getMonth() + 1).toString();
  var dom = date.getDate().toString();
  if (month.length == 1) month = "0" + month;
  if (dom.length == 1) dom = "0" + dom;
  return date.getFullYear() + "-" + month + "-" + dom;
  }
  });