.magellan_container{:"data-sticky-container" => ''}
  %nav.sticky{:"data-sticky" => '', :'data-options' => 'marginTop:2.5'}
    %ul.horizontal.menu{:'data-magellan' => ''}
      %li= link_to @item.short_name + ": ", '#' 
      %li.active= link_to 'Details', "#details"
      - unless @json.blank?
        %li= link_to 'Map', "#map"
        = render :partial => 'home/front_map', locals: {json: @json, target: 'map_container', center: @json.size > 1 ? false : @json.first}
      %li= link_to "Comments & discussion (#{@item.discussion.size})", "#discussion"
      - unless @item.similars.empty?
        %li= link_to 'Possibly related items', "#similars"

.row#master_container
  .small-10.columns.small-offset-1.master_head#details
    %section#details
    .row
      .small-3.columns
        - if @item.class.to_s =~ /ook$/
          = image_tag @item.icon(:original)
        - else
          = image_tag @item.icon(:full)
      .small-9.columns.text-center
        .main_title{:"data-magellan-destination" => "details"}
          = raw @item.name
        
        .secondary_title
          - if @item.respond_to?('english_title')
            - unless @item.english_title.blank?
              .title
                %em= "(English title: "
                = "#{@item.english_title})"
          - unless @item.class.to_s.downcase =~ /music/ || @item.name.include?(@item.secondary_title)
            = raw @item.secondary_title
          - if @item.respond_to?('linkto')
            %span.link_to
              = link_to fa_icon('external-link'), @item.linkto, :target => "_blank"
              = link_to  edit_master_genericmaster_path(:category => @item.class.to_s, :id => @item.master_id) do
                %span.has-tip{"aria-haspopup" => "true", "data-tooltip" => "", :title => raw("Edit the master record for #{strip_tags @item.name}!")}= fa_icon(@item.icon_name)
                
        = render :partial => "shared/#{@item.class.to_s.downcase}", :locals => {:item => @item}
        
- unless @json.blank?
  %seciont#map
  #map_container{:"data-magellan-destination" => "map"}


- unless @item.references.empty?
  .referred_bar
    %h3 Referenced by:
    %ul
      - @item.references.each do |ref|
        %li
          .agent
            = "Agent #{ref.source.agent.surname} on " 
            %span.date= ref.source.formatted_date 
            = ":"
          .title= link_to raw(ref.source.name), url_for(ref.source) + "##{ref.source.class.to_s.tableize.singularize}_#{ref.source.id.to_s}", target: :_blank 
          .agent

%section#discussion
  
  .row
    .large-10.columns.large-offset-1.item_listing= render :partial => 'shared/new_discussion', :locals => {:discussion => @item.discussion.uniq, :json => @json, :master => false}
    
  - if agent_signed_in?
    .row
      .large-8.columns.large-offset-2= render :partial  => 'shared/new_comment', :locals => {comment: Comment.new(:item => @item, agent: current_agent, add_to_newsfeed: false), item: @item}
      
      
- cache(:action_suffix => 'similars', :action => 'show', :category => @item.class.to_s.downcase, :id =>  @item.id) do

  - if @item.respond_to?('author')
    - if @item.similars.map{|x| x.author}.include?(@item.author)
      .across_strip
        .row
          .small-12.columns
            
            = link_to raw("There are multiple entries by this author. See all aggregated for #{ @item.author} ..."), aggregate_creators_genericmaster_path(:category => @item.class.to_s, :id => @item.id)

  - if @item.respond_to?('director')
    - if @item.similars.map{|x| x.director}.include?(@item.director)
      .across_strip
        .row
          .small-12.columns
            
            = link_to raw("There are multiple entries by this director. See all aggregated for #{ @item.director} ..."), aggregate_creators_genericmaster_path(:category => @item.class.to_s, :id => @item.id)

  - if @item.respond_to?('artist')
    - if @item.similars.map{|x| x.artist}.include?(@item.artist)
      .across_strip
        .row
          .small-12.columns
            
            = link_to raw("There are multiple entries by this artist. See all aggregated for #{@item.artist} ..."), aggregate_creators_genericmaster_path(:category => @item.class.to_s, :id => @item.id)
  - unless @item.similars.empty?
    %section#similars
      
      .row
        .small-12.columns.text-center 
          %h3 Possibly related entries:

      - @item.similars.in_groups_of(4).each do |similar_group|
        .row{:"data-equalizer" => ''}
          - similar_group.each_with_index do |similar, index|
            - next if similar.nil?
            .small-3.column{class: similar_group[index+1].nil? ? :end : false}
              .similar_movie_image{:"data-equalizer-watch" => ''}
                - if similar.filename?
                  = image_tag similar.filename.url
                  -#= raw one_or_slideshow(similar, '/system/no_image.png', :thumb)
              .floor
                .similar_link= link_to raw(similar.name), similar
                .metadata
                  = "Agents: #{similar.items.map{|x| x.agent.surname }.uniq.join(', ')}"


