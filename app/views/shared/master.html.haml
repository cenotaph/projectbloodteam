.magellan_container{:"data-magellan-expedition" => "", :"data-options"  => "threshold:80;destination_threshold:80;throttle_delay:50;fixed_top:40;"}
  %dl.sub-nav
    %dd= link_to @item.short_name + ": ", '#' 
    %dd.active{:"data-magellan-arrival" => "details"}= link_to 'Details', "#details"
    - unless @json.blank?
      %dd{:"data-magellan-arrival" => "map"}= link_to 'Map', "#map"
      = render :partial => 'home/front_map', locals: {json: @json, target: 'map_container', center: @json.size > 1 ? false : @json.first}
    %dd{:"data-magellan-arrival" => "discussion"}= link_to "Comments & discussion (#{@item.discussion.size})", "#discussion"
    - unless @item.similars.empty?
      %dd{:"data-magellan-arrival" => "similars"}= link_to 'Possibly related items', "#similars"

.row#master_container
  .small-10.columns.small-offset-1.master_head#details
    %a{:name => "#details"}
    .row
      .small-3.columns= image_tag @item.icon(:full)
      .small-9.columns.text-center
        .main_title{:"data-magellan-destination" => "details"}
          = raw @item.name
        
        .secondary_title
          - unless @item.class.to_s.downcase =~ /music/ || @item.name.include?(@item.secondary_title)
            = raw @item.secondary_title
          - if @item.respond_to?('linkto')
            %span.link_to
              = link_to fa_icon('external-link'), @item.linkto, :target => "_blank"
              = link_to  edit_master_genericmaster_path(:category => @item.class.to_s, :id => @item.master_id) do
                %span.has-tip{"aria-haspopup" => "true", "data-tooltip" => "", :title => "Edit the master record for #{@item.name}!"}= fa_icon(@item.icon_name)
        = render :partial => "shared/#{@item.class.to_s.downcase}", :locals => {:item => @item}
        
- unless @json.blank?
  %a{:name => "#map"}
  #map_container{:"data-magellan-destination" => "map"}



#discussion
  %a{:name => "discussion", :"data-magellan-destination" => "discussion"}
  .row
    .large-10.columns.large-offset-1.item_listing= render :partial => 'shared/new_discussion', :locals => {:discussion => @item.discussion, :json => @json, :master => false}
    
  - if agent_signed_in?
    .row
      .large-8.columns.large-offset-2= render :partial  => 'shared/new_comment', :locals => {comment: Comment.new(:item => @item, agent: current_agent), item: @item}
      
      
- cache(:action_suffix => 'similars', :action => 'show', :category => @item.class.to_s.downcase, :id =>  @item.id) do

  - if @item.respond_to?('author')
    - if @item.similars.map{|x| x.author}.include?(@item.author)
      .across_strip
        .row
          .small-12.columns
            
            = link_to raw("There are multiple entries by this author. See all aggregated for #{ @item.author} ..."), aggregate_creators_genericmaster_path(:category => @item.class.to_s, :id => @item.id)

  - if @item.respond_to?('director')
    - if @item.similars.map{|x| x.director}.include?(@item.director)
      .across_strip
        .row
          .small-12.columns
            
            = link_to raw("There are multiple entries by this director. See all aggregated for #{ @item.director} ..."), aggregate_creators_genericmaster_path(:category => @item.class.to_s, :id => @item.id)

  - if @item.respond_to?('artist')
    - if @item.similars.map{|x| x.artist}.include?(@item.artist)
      .across_strip
        .row
          .small-12.columns
            
            = link_to raw("There are multiple entries by this artist. See all aggregated for #{@item.artist} ..."), aggregate_creators_genericmaster_path(:category => @item.class.to_s, :id => @item.id)
  - unless @item.similars.empty?
    #similars
      %a{:name => "similars", :"data-magellan-destination" => "similars"}
      .row
        .small-12.columns.text-center 
          %h3 Possibly related entries:

      - @item.similars.in_groups_of(4).each do |similar_group|
        .row
          - similar_group.each do |similar|
            - next if similar.nil?
            .small-3.columns
              = raw one_or_slideshow(similar, '/system/no_image.png', :thumb)
              .similar_link= link_to raw(similar.name), similar
              .metadata
                = "Agents: #{similar.items.map{|x| x.agent.surname }.uniq.join(', ')}"


