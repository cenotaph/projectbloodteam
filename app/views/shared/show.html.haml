.magellan_container{:"data-sticky-container" => ''}
  %nav.sticky{:"data-sticky" => '', :'data-options' => 'marginTop:2.5'}
    %ul.horizontal.menu{:'data-magellan' => ''}
      %li=  link_to raw(@item.name.to_s) + ": ", '#'
      %li.active= link_to 'Details', "#details"
      - unless @item.userimages.empty?
        %li= link_to pluralize(@item.userimages.size, 'image'), "#images"
      - unless @item.discussion.size == 1
        %li= link_to "Comments & discussion (#{@item.discussion.size - 1})", "#discussion"

      - unless @json.blank?
        = render :partial => 'home/front_map', locals: {json: @json, target: 'map_container', center: @item.geolocation}
        %li= link_to 'Map', "#map"
      - unless @item.similars.empty?
        %li= link_to "Possibly related items (#{@item.similars.size})", "#similars"


  

.special_container
  #outer{:style => @item.userimages.empty? ? false : "background: linear-gradient(rgba(255,255,255,0),rgba(255,255,255,0)), url(#{@item.userimages.first.image.url(:fuller)});  background-size: contain; "}
  
    %section#details
      .small-8.columns.small-offset-2.forum_head{:style => @item.userimages.blank? ? "background: url(#{@item.agent_icon(:large)}) no-repeat; background-size: contain" : "background-color: white; opacity: 0.9"}
        %a{:name => "details"}
        .inner.text-center
          %span.big= raw('&ldquo;') if @item.class == Forum
          .main_title
            - if @item.respond_to?('primary_title')
              = raw @item.primary_title
            - else
              = raw @item.name
          - if @item.respond_to?('secondary_title')
            - unless @item.secondary_title.blank? 
              %p.very_small &nbsp;
              .secondary_title= raw @item.secondary_title
          %span.big= raw('&rdquo;') if @item.class == Forum
        .agent_metadata{:class => @item.userimages.empty? ? false : 'text-center', :style => @item.userimages.empty? ? 'float: left' : false}
          .agent_name= link_to "Agent #{@item.agent.surname}", @item.agent
          .standalone_date= @item.formatted_date
          - if agent_signed_in?
            - if @item.agent == current_agent
              = link_to fa_icon('pencil'), "/agents/#{current_agent.slug}/#{@item.class.table_name}/#{@item.id}/edit"
              = link_to fa_icon('trash'), @item, method: :delete, data: {confirm: 'Are you sure you want to delete this item?'}

    .row
      .small-8.columns.small-offset-2.first_comment{:style => @item.userimages.blank? ? false : "background-color: white; opacity: 0.87"}
        - if show_entry?(@item)
          - if @item.respond_to?('metadata')
            .metadata

              - @item.metadata['metadata'].each_pair do |key, value|
                - next if key == 'date' || key == 'location'
                - next if value.blank?
                - next if value == 0
                - if key == 'cost'
                  - next if value.last.blank? 
                .item_metadata{:class => key}
                  %span.item_metadata_category= @item.column_name(key) + ": "
                  -#= @view.agent_column_name(@item, key).to_s.humanize
                  //= (key == 'first' ? 'First viewing' : key.humanize) + ":"
                  %span.item_metadata_value= display_metadata(key, value)
            
          - unless display_comment(@item).blank?
            .row
              .columns.comment{class: @item.references.empty? ? "small-12" : "small-10" }
                .row
                  .small-1.columns.text-right.big= raw('&ldquo;')
                  .small-11.columns.comment_body
                    = raw display_comment(@item)
                    .entered_date= "entered " + time_ago_in_words(@item.created_at) + " ago"
              - unless @item.references.empty?
                .references.small-2.columns
                  .heading References:
                  %ul
                    - @item.references.each do |ref|
                      %li
                        = link_to raw(ref.reference.name), ref.reference, target: :_blank
                        - unless ref.comment.blank?
                          %span{:"data-tooltip" =>  true, :"aria-haspopup" => true, title: ref.comment}= fa_icon('file-text')
    %second#images                
      .row#slideshow
        .small-8.columns.small-offset-2
          %a{:name => "images"}        
          = raw one_or_slideshow(@item)

       
  %section#discussion{:style => @item.userimages.blank? ? false : "background-color: white; opacity: 0.9"}
    .row
      .large-10.columns.large-offset-1.item_listing= render :partial => 'shared/new_discussion', :locals => {:discussion => @item.discussion[1..-1], :json => @json, :master => false}

    - if agent_signed_in?
      .row
        .small-8.columns.small-offset-2= render :partial  => 'shared/new_comment', :locals => {comment: Comment.new(:item => @item, agent: current_agent), item: @item}

    
- unless @json.blank?
  .container
    %section#map
    #map_container

- cache [@item, 'similars', current_agent] do
  - unless @item.similars.empty?
    - if @item.similars.size > 4
      .across_strip
        .row
          .small-12.columns.text-center
            = link_to raw("This appears to be popular. See all aggregated for #{@item.name} ..."),  aggregate_generic_path(:category => @item.class.to_s, :id => @item.id)
    %section#similars

      .row
        .small-8.small-offset-2.columns.text-center 
          %h3 Possibly related entries:
      - @item.similars.take(24).in_groups_of(4).each do |similar_group|
        .row
          - similar_group.each_with_index do |similar, index|
            - next if similar.nil?
            - next unless show_entry?(similar)
            .small-3.columns{:class => (similar[index+1].nil? ? :end : false)}
              .similar_image= raw one_or_slideshow(similar, '/system/no_image.png', :thumb)
              .similar_link= link_to raw(similar.name), similar
              .metadata
                .item_metadata
                  %span.item_metadata_category Agent:
                  %span.item_metadata_value= similar.agent.surname
                .item_metadata
                  %span.item_metadata_category Date:
                  %span.item_metadata_value= similar.formatted_date
                  - if similar.respond_to?('metadata')
                    - similar.metadata['metadata'].each_pair do |key, value|
                      - next if value.blank?
                      - next if value == 0
                      - if key == 'cost'
                        - next if value.last.blank? 
                      .item_metadata{:class => key}
                        %span.item_metadata_category= similar.column_name(key) + ": "
                        -#= (key == 'first' ? 'First viewing' : key.humanize) + ":"
                        %span.item_metadata_value= display_metadata(key, value)
              
  
- unless @item.userimages.empty?        
  = content_for :jquery do
    :plain

      $('.slick_carousel').slick({autoplay: true});
      $('.slick_carousel').each(function() {
        $(this).slickLightbox({slick: {autoplay: true}});
        });
        
      $(document).scroll(function(){     
        var opac = $(window).scrollTop() / ( ($('#outer').height() / 3) ) ;
   
        $('#outer').css({'background': '-webkit-linear-gradient(rgba(255,255,255,' + opac + '),rgba(255,255,255,' + opac + ')), url(#{@item.userimages.first.image.url(:fuller)})',
        'background-repeat':'no-repeat','background-size':'contain'});

        $('#outer').css({'background': 'linear-gradient(rgba(255,255,255,' + opac + '),rgba(255,255,255,' + opac + ')), url(#{@item.userimages.first.image.url(:fuller)})', 'background-repeat':'no-repeat','background-size':'contain'});
        $('#slideshow').css('opacity',  opac);
      });        