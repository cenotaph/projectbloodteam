
.row#master_container
  .small-12.large-8.columns.large-offset-2.master_head#details
    %a{:name => "#details"}
    .row
      .small-6.large-3.columns= image_tag @item.icon
      .small-6.large-9.columns.text-left
        .master_title{:"data-magellan-destination" => "details"}
          = raw @item.master.name
          - if @item.respond_to?('english_title')
            - unless @item.english_title.blank?
              .title
                %em= "(English title: "
                = "#{@item.english_title})"
          - if @item.respond_to?('linkto')
            %span.link_to= link_to fa_icon('external-link'), @item.linkto, :target => "_blank"
        .secondary_title= raw @item.master.secondary_title unless @item.master.name.include?(@item.master.secondary_title)
- if @item.others.size > 0
  .across_strip
    This has been added by
    = pluralize(@item.others.size, 'other agent') + "."
    = link_to 'See >>>', '#', :onclick => "$('.item_others').slideToggle();"
    .item_others.row{:style => 'display: none;'}
      - @item.others.sort_by{|x| x.date}.each do |other|
        .other.small-4.columns
          = link_to image_tag(other.agent_icon(:thumb)), '#', :"data-reveal-id" => "other_" + other.id.to_s
          %br/
          = link_to other.agent.surname, '#', :"data-open" => "other_" + other.id.to_s
          .other_date= other.date.strftime('%b %d, %Y')
        .reveal{:id => "other_" + other.id.to_s, :"data-reveal" => ''}
          .row
            .small-5.columns
              .row
                .small-4.columns= image_tag other.agent_icon(:thumb)
                .small-8.columns.text-right
                  .metadata
                    .item_metadata
                      %span.item_metadata_category Agent:
                      %span.item_metadata_value= other.agent.surname
                    .item_metadata
                      %span.item_metadata_category Date:
                      %span.item_metadata_value= other.formatted_date
                      - if other.respond_to?('metadata')
                        - other.metadata['metadata'].each_pair do |key, value|
                          - next if value.blank?
                          - next if value == 0
                          - if key == 'cost'
                            - next if value.last.blank? 
                          .item_metadata{:class => key}
                            %span.item_metadata_category= (key == 'first' ? 'First viewing' : key.humanize) + ":"
                            %span.item_metadata_value= display_metadata(key, value)
            .small-6.columns
              - unless display_comment(other).blank?
                %span.big= raw('&ldquo;')
              = raw display_comment(other)
              .entered_date= "entered " + time_ago_in_words(other.created_at) + " ago"

.row
  .large-8.columns.large-offset-2.small-12
    = semantic_nested_form_for([@item.agent, @item], :html => {:multipart => true, :"data-abide" => ''} ) do |form|
      - @view.columns_for_category(@item.class, true).each do |col|
        .row
          .small-12.columns
            - if @item.class.columns_hash[col].type == :date
              .form_wrapper{:class => col}= form.input col, :as => :string, :input_html => { :class => 'date_input', :required => col == :date ? '' : false}
          
            - elsif (col == 'location' && @item.respond_to?('venue_address')) && @item.respond_to?('geolocation')
              = form.input :geolocation_id, :as => :hidden
              - json = ActiveSupport::JSON.encode( :geolocation_id => "##{@item.class.to_s.downcase}_location" )
          
              .form_wrapper{:class => col}= form.input col, 'data-update-elements' => json, :as => :autocomplete, :url =>  ajax_geolocations_path(:category => @item.class), input_html: {:required => ''}
          
              .geocode{:style => "display: none; margin-left: 75px; font-size: 7pt;"}
                Geodata: 
                Latitude:
                = text_field_tag :latitude, @item.geolocation.nil? ? '' : @item.geolocation.latitude, :disabled => true
                Longitude:
                = text_field_tag :longitude, @item.geolocation.nil? ? '' : @item.geolocation.longitude, :disabled => true
                = content_for :jquery do
                  :plain
                    $("##{@item.class.to_s.downcase}_location").bind('railsAutocomplete.select', function(event, data){
                      /* Do something here */
                      $('#latitude').val(data.item.lat);
                      $('#longitude').val(data.item.lng);
                      $('.geocode').fadeIn();
                      $("##{@item.class.to_s.downcase}_geolocation_id").val(data.item.geolocation_id);
                      $("##{@item.class.to_s.downcase}_venue_address").val(data.item.address);
                      $("##{@item.class.to_s.downcase}_location").val(data.item.name);
                    });
              = form.input :dont_geocode, :as => :boolean, :label => "Don't save geographical data",:input_html => {:class => 'no_geocode'}
          
          
            - elsif col == 'cost'
              .form_wrapper{:class => col}= form.input :currency_id, :as => :select, :collection => Currency.all.collect{|x| [raw( x.symbol),  x.id]}, :label => 'Cost', :input_html => {:class => :currency_select}
              .form_wrapper{:class => col}= form.input col, :label => @view.agent_column_name(@item, col).humanize, :as => :string, :label => false, :input_html => {:class => :cost_input}
              
            
            - else 
              .form_wrapper{:class => col}= form.input col, :label => @view.agent_column_name(@item, col).to_s.humanize
          
          = form.input :agent_id, :as => :hidden
          - symbol = ((@master.gsub(/^Master/, 'master_') + '_id').downcase).to_sym
          = form.input symbol, :as => :hidden

      .row
        .small-12.columns#userimages
          = form.fields_for :userimages do |ff|
            - if ff.object.image?
              = image_tag ff.object.image.url
            = ff.input :image
            = ff.link_to_remove 'Remove this image'
            -#= render :partial => 'shared/userimage_fields', :locals => { :ff => ff }      
          = form.link_to_add "+ Add an image", :userimages, class: "button tiny secondary"
        
      - if @category == 'Movie'
        .row
          .small-12.columns.form_wrapper{:class => :add_to_newsfeed}= form.input :is_short, :label => 'Display on separate page for short films' 
      .row
        .small-12.columns.form_wrapper{:class => :add_to_newsfeed}= form.input :add_to_newsfeed, :as => :boolean, :label => 'Post this entry to the public newsfeed', :checked => true
    
      - if !current_agent.twitname.blank? && !current_agent.twitpasswd.blank?
        .row
          .small-12.columns
            = form.input :post_to_twitter, :as => :boolean, :label => 'Post this entry to your twitter account', :checked => true
        
      .row
        .small-6.columns= form.submit 'Save', class: [:button, :small]


= content_for :jquery do
  :plain
    var puny_mce = new punymce.Editor({spellcheck: true, id : '#{@category.downcase}_comment'});
    $('label[for=#{@category.downcase}_comment]').html('Comment - titles entered in italics can be linked to as references');
    $('.date_input').datepicker({dateFormat: 'yy-mm-dd'});

    $('input.no_geocode').change(function () { 
      if ($('input#movie_venue_address').attr('disabled') == false) {
        $('input#movie_venue_address').attr('disabled', 'disabled');
      } else {
        $('input#movie_venue_address').removeAttr('disabled');
      }
    });


